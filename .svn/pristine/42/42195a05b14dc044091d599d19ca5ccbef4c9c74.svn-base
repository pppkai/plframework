<?php 
/**
 +------------------------------------------------------------------------------
 * PLFrame框架 权限验证规则
 +------------------------------------------------------------------------------
 * @category lib
 * @package  PLFrame
 * @author   pengzl<pengzl_gz@163.com>
 * @version  $Id: VerifyRules.class.php 7 2010-08-24 08:10:12Z pengzl_gz@163.com $
 +------------------------------------------------------------------------------
 */
class VerifyRules 
{
    private static $m_RULES_MODE = null;
    private static $m_RULES_LIST = null;
    private static $m_instance = null;
        
    private function __construct()
    {
        self::$m_RULES_MODE = C('RULES_MODE');
        self::$m_RULES_LIST = C('RULES_LIST');
    }

    // 单例
    static public function getInstance()
    {
        if (!is_object(self::$m_instance))
        {
            self::$m_instance = new self();
        }
        return self::$m_instance;
    }
    
    // 启动验证
    function Run()
    {
        return self::__verityRules();
    }
    
    // 模块验证
    static private function __verityRules()
    {
        $m_module_name_list = S(C('USER_SESSION_ACTION_NAME')) ? explode(C('USER_SESSION_SEP'), S(C('USER_SESSION_ACTION_NAME'))) : array();
        $m_module = R(URL_MODULE);
        $m_action = R(URL_ACTION);
        $m_mod_id = C('CHECK_ACTION_ARRAY_ID');
        $m_moduleid = isset($m_mod_id[$m_action]) ? $m_mod_id[$m_action] : R(C('CHECK_ACTION_ID'));
        
        if (self::$m_RULES_MODE && $m_moduleid)
        {
            if (count($m_module_name_list)) 
            {
                return in_array($m_action, $m_module_name_list);
            } else {
                return !in_array($m_module, self::$m_RULES_LIST);
            }
        } elseif (self::$m_RULES_MODE && !$m_moduleid) {
            return !in_array($m_module, self::$m_RULES_LIST);
        } else {
            return true;
        }
    }
}
?>
